basic design(BD)：基本設計

================================================================================

開発の流れ
	１．要件定義
	２．基本設計(外部設計)
		A.方式設計(アーキテクチャ設計)
		　ハード／ソフトの構造（アーキテクチャ）や実装方針を決める作業
		　例えば，ハードウエアやミドルウエア，フレームワークといったシステム基盤，
		　アプリケーション全体の構造，開発標準やテスト方式などを設計する
			１．プラットフォーム設計
			２．アプリケーションアーキテクチャ設計
			３．開発標準やテスト方式の決定
		B.機能設計(アプリケーション設計)
		　システム全体をモジュール単位に分割し、各モジュールの外部仕様(機能、データ、画面・帳票等)を決定する。
		　アプリケーションとして実装する機能やデータベース，画面や帳票などを設計する
			１．ビジネスロジック設計
			２．データベース設計
			３．画面・帳票設計
			４．バッチ設計
		C.その他の設計
			１．性能/信頼性設計
			２．セキュリティ設計
			３．移行設計(システム/業務)
			４．運用設計(システム/業務)
	３．詳細設計(内部設計)
	４．プログラミング／単体テスト
	５．結合テスト
	６．システムテスト

	基本設計を成功に導く3つの必須スキル
		A.機能設計や方式設計を，正しい手順に則って進めるスキル
		　基本設計の手順と作業内容を理解し、作成すべき成果物をもれなく作成できる。
		　各成果物の種類や役割も把握し、詳細からわかりやすいドキュメントを作成できる。
			手順だけではなく，アプリケーションを適切にモジュールに分割する構造化設計といった，
			設計の「基本中の基本」も，当然ながら理解しておく必要がある
		B.方式設計で「パターン」を適切に適用できるスキル
		　ハード/ソフトの構造(アーキテクチャ)や実装方針を迅速かつ確実に決定するために、
		　先人たちが生み出した「パターン」を適材適所で利用できる。
			具体的には，外部システムとの連携方法のパターンである「インテグレーション・パターン」や
			システム全体の分割方法を示した「アーキテクチャ・パターン」，
			具体的な実装方針を示した「アプリケーション・アーキテクチャ・パターン」を理解しておく必要がある。
		C.成果物を正しくレビューするスキル
		　作成された成果物や設計プロセスに対して、適切な手順や基準でレビューできる。
		　そのために、レビュー対象やレビューのタイミング、レビューの方法を理解している。
			設計者自身が設計書をチェックするスキルを持つことで，
			例えば，設計時に結合テスト用のテストケースを作成すれば，
			机上で設計仕様書のテストができる。
			ウォークスルーやインスペクションといった基本的なレビュー方法についても，設計者が理解しておくべき。

参考
	Part1　今こそ「基本設計」のスキルを見直す
		http://itpro.nikkeibp.co.jp/article/lecture/20070702/276409/

----------------------------------------

DOA（Data Oriented Approach
	データ中心型アプローチ）は対象システムの「データの流れ」の把握に重点を置きながら，
	要件定義や設計を進めていくアプローチ

IBM-DOA
	主に業務全体をデータの流れに着目して図で表現するDFD（Data Flow Diagram）を使って、
	業務を分析・設計していく。

中心的な役割果たすDFD
	アプリケーションの要求を仕様としてまとめるのに向いており，
	データを中心に明確であいまいさの残りにくい仕様を作成できる。

	後続フェーズへの連続性もDFDの大きなメリットである。
	実際，要件定義フェーズの成果物として作成したDFDは外部設計のインプットとなり，
	外部設計ではDFDを基にサブシステム分割を行ってプロセスやデータの実現方法を決定していく。

	DFDでは，業務全体を、以下などの要素で表現する（図1）。
		「データフロー（データの流れ）」，
		「データストア（データの蓄積）」，
		「プロセス（処理）」
	IBM-DOAではこの表記法に従って，4つのDFDモデルを作成する。
	これらのDFDモデルは，最も抽象度の高いレベルから段階的に詳細化していく。
		「DFD現物理モデル」
			現行業務のデータの流れを表す，
			要件定義で作成。
		「DFD現論理モデル」
			「DFD現物理モデル」から本質的なデータの流れのみに絞った，
			要件定義で作成。
		「DFD新論理モデル」
			新システムへの要件を加えた，
			要件定義で作成。
		「DFD新物理モデル」
			そしてアーキテクチャなどの物理的な特性を加味した。
			外部設計で作成。

	要件定義で作成
		「データストア記述」
			DFD新論理モデルの中の「データストア」に含まれるデータ項目をリストアップした，
		「データフロー記述」
			「データフロー」に含まれるデータ項目をリストアップした，
		「処理機能記述」
			「プロセス」の内容をIPO（Input Process Output：入力-処理-出力）形式で記述した
	DFD新論理モデルとこれら3つの仕様書を「DFD4点セット」（図2）と呼び，外部設計への重要なインプットとなる。

	DFD4点セットのうち「データストア記述」はデータの正規化とER図作成を経て、
	データベース設計に，「データフロー記述」は画面や帳票設計に，
	「処理機能記述」はプログラムの機能仕様に直接つながる。



参考
	Part2　設計手順の基本を身に付ける
		http://itpro.nikkeibp.co.jp/article/lecture/20070702/276410/
	
		
	

================================================================================

	「現状のソフトウェア開発は間違っていないか？」（プロセス編） (1/3)
		http://www.atmarkit.co.jp/ait/articles/0901/28/news151.html
	アジャイル開発と反復開発の落とし穴 (1/3)
		http://www.atmarkit.co.jp/ait/articles/0903/11/news114.html
	

